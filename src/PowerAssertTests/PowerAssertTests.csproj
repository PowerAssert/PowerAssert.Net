<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>
    </ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{665FDD28-99EF-4038-9469-1B27F778BF1D}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>PowerAssertTests</RootNamespace>
    <AssemblyName>PowerAssertTests</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="ApprovalTests">
      <HintPath>..\..\packages\ApprovalTests.3.0.7\lib\net40\ApprovalTests.dll</HintPath>
    </Reference>
    <Reference Include="ApprovalUtilities">
      <HintPath>..\..\packages\ApprovalUtilities.3.0.7\lib\net35\ApprovalUtilities.dll</HintPath>
    </Reference>
    <Reference Include="nunit.framework">
      <HintPath>..\..\lib\nunit.framework.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <CodeAnalysisDependentAssemblyPaths Condition=" '$(VS100COMNTOOLS)' != '' " Include="$(VS100COMNTOOLS)..\IDE\PrivateAssemblies">
      <Visible>False</Visible>
    </CodeAnalysisDependentAssemblyPaths>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Approvals\ApprovalTestExtensions\CiReporter.cs" />
    <Compile Include="Approvals\ApprovalTestExtensions\HappyDiffReporter.cs" />
    <Compile Include="Approvals\ApprovalTestExtensions\OverwriteReporter.cs" />
    <Compile Include="Hints\BrokenEqualityHintTests.cs" />
    <Compile Include="Hints\DelegateShouldHaveBeenInvokedEqualsHintTests.cs" />
    <Compile Include="Hints\EnumerableEqualsHintTests.cs" />
    <Compile Include="Hints\EnumerableOperatorEqualsHintTests.cs" />
    <Compile Include="Hints\FloatEqualityHintTests.cs" />
    <Compile Include="Hints\MethodEqualsInsteadOfOperatorEqualsHintTests.cs" />
    <Compile Include="Hints\SequenceEqualsHintTests.cs" />
    <Compile Include="Hints\StringEqualsHintTests.cs" />
    <Compile Include="Hints\StringOperatorEqualsHint.cs" />
    <Compile Include="Hints\TimeSpanTotalMistakesHintTests.cs" />
    <Compile Include="NodeFormatterTest.cs" />
    <Compile Include="ParserTest.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Approvals\EndToEndTest.cs" />
    <Compile Include="ThrowsTest.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\PowerAssert\PowerAssert.csproj">
      <Project>{7E9D2DB4-78FE-41BD-9566-15F68D42E4D9}</Project>
      <Name>PowerAssert</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Service Include="{82A7F48D-3B50-4B1E-B82E-3ADA8210C358}" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="Approvals\EndToEndTest.ArrayIndexOfBinary.approved.txt" />
    <Content Include="Approvals\EndToEndTest.ArrayLength.approved.txt" />
    <Content Include="Approvals\EndToEndTest.BinaryArguments.approved.txt" />
    <Content Include="Approvals\EndToEndTest.BinaryArrayElement.approved.txt" />
    <Content Include="Approvals\EndToEndTest.BrokenEqualityTestInstanceEquals.approved.txt" />
    <Content Include="Approvals\EndToEndTest.Casting.approved.txt" />
    <Content Include="Approvals\EndToEndTest.PolyAssert.approved.txt" />
    <Content Include="Approvals\EndToEndTest.PolyAssertCanFinishEarly.approved.txt" />
    <Content Include="Approvals\EndToEndTest.UnaryCastOfBinary.approved.txt" />
    <Content Include="Approvals\EndToEndTest.CompareDelegateAndObject.approved.txt" />
    <Content Include="Approvals\EndToEndTest.CompareTwoCloseFloats.approved.txt" />
    <Content Include="Approvals\EndToEndTest.Enum.approved.txt" />
    <Content Include="Approvals\EndToEndTest.EnumerablesThatDiffer.approved.txt" />
    <Content Include="Approvals\EndToEndTest.EqualsButNotOperatorEquals.approved.txt" />
    <Content Include="Approvals\EndToEndTest.MethodCallOfBinary.approved.txt" />
    <Content Include="Approvals\EndToEndTest.MethodCallOfBinaryBackward.approved.txt" />
    <Content Include="Approvals\EndToEndTest.NullCoalesce.approved.txt" />
    <Content Include="Approvals\EndToEndTest.NullDereference.approved.txt" />
    <Content Include="Approvals\EndToEndTest.OneStringIsDecomposedVersionOfOther.approved.txt" />
    <Content Include="Approvals\EndToEndTest.OperatorPriority.approved.txt" />
    <Content Include="Approvals\EndToEndTest.PrintingComplexLinqExpressionStatements.approved.txt" />
    <Content Include="Approvals\EndToEndTest.PrintingDictionary.approved.txt" />
    <Content Include="Approvals\EndToEndTest.PrintingEnumerablesWithNulls.approved.txt" />
    <Content Include="Approvals\EndToEndTest.PrintingIsTest.approved.txt" />
    <Content Include="Approvals\EndToEndTest.PrintingLinqExpressionStatements.approved.txt" />
    <Content Include="Approvals\EndToEndTest.PrintingLinqStatements.approved.txt" />
    <Content Include="Approvals\EndToEndTest.PrintingMethodCall.approved.txt" />
    <Content Include="Approvals\EndToEndTest.PrintingNewExpression.approved.txt" />
    <Content Include="Approvals\EndToEndTest.PrintingTestClassFields.approved.txt" />
    <Content Include="Approvals\EndToEndTest.PrintingUnaryNegate.approved.txt" />
    <Content Include="Approvals\EndToEndTest.PrintingUnaryNot.approved.txt" />
    <Content Include="Approvals\EndToEndTest.PropertyAccessOfBinary.approved.txt" />
    <Content Include="Approvals\EndToEndTest.RunComplexExpression.approved.txt" />
    <Content Include="Approvals\EndToEndTest.RunComplexExpression2.approved.txt" />
    <Content Include="Approvals\EndToEndTest.RunComplexExpression3.approved.txt" />
    <Content Include="Approvals\EndToEndTest.RunComplexExpressionWithStaticField.approved.txt" />
    <Content Include="Approvals\EndToEndTest.RunRoundingEdgeCase.approved.txt" />
    <Content Include="Approvals\EndToEndTest.RunStringCompare.approved.txt" />
    <Content Include="Approvals\EndToEndTest.SequenceEqualButNotDotEquals.approved.txt" />
    <Content Include="Approvals\EndToEndTest.SequenceEqualButNotOperatorEquals.approved.txt" />
    <Content Include="Approvals\EndToEndTest.ShouldHaveUsedTotal.approved.txt" />
    <Content Include="Approvals\EndToEndTest.StringContainsControlChar.approved.txt" />
    <Content Include="Approvals\EndToEndTest.StringContainsFormatChar.approved.txt" />
    <Content Include="Approvals\EndToEndTest.StringContainsMismatchedNewlines.approved.txt" />
    <Content Include="Approvals\EndToEndTest.StringsThatDiffer.approved.txt" />
    <Content Include="Approvals\EndToEndTest.StringsThatDifferAndAreComparedCaseInsensitively.approved.txt" />
    <Content Include="Approvals\EndToEndTest.TestDifferingLists.approved.txt" />
    <Content Include="Approvals\EndToEndTest.UnaryNotOfBinary.approved.txt" />
  </ItemGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>