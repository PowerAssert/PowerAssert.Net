<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7E9D2DB4-78FE-41BD-9566-15F68D42E4D9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>PowerAssert</RootNamespace>
    <AssemblyName>PowerAssert</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'NuPackRelease|AnyCPU'">
    <OutputPath>release\lib\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>none</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <CodeAnalysisLogFile>bin\Release\PowerAssert.dll.CodeAnalysisLog.xml</CodeAnalysisLogFile>
    <CodeAnalysisUseTypeNameInSuppression>true</CodeAnalysisUseTypeNameInSuppression>
    <CodeAnalysisModuleSuppressionsFile>GlobalSuppressions.cs</CodeAnalysisModuleSuppressionsFile>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <CodeAnalysisRuleSetDirectories>;C:\Program Files\Microsoft Visual Studio 10.0\Team Tools\Static Analysis Tools\\Rule Sets</CodeAnalysisRuleSetDirectories>
    <CodeAnalysisIgnoreBuiltInRuleSets>false</CodeAnalysisIgnoreBuiltInRuleSets>
    <CodeAnalysisRuleDirectories>;C:\Program Files\Microsoft Visual Studio 10.0\Team Tools\Static Analysis Tools\FxCop\\Rules</CodeAnalysisRuleDirectories>
    <CodeAnalysisIgnoreBuiltInRules>false</CodeAnalysisIgnoreBuiltInRules>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System" />
    <Reference Include="System.Core" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Annotations.cs" />
    <Compile Include="Hints\BrokenEqualityHint.cs" />
    <Compile Include="Hints\EnumComparisonShowValuesHint.cs" />
    <Compile Include="Hints\TimeSpanTotalMistakesHint.cs" />
    <Compile Include="Hints\EnumerableEqualsHint.cs" />
    <Compile Include="Hints\DelegateShouldHaveBeenInvokedEqualsHint.cs" />
    <Compile Include="Hints\EnumerableOperatorEqualsHint.cs" />
    <Compile Include="Hints\FloatEqualityHint.cs" />
    <Compile Include="Hints\HintUtils.cs" />
    <Compile Include="Hints\IHint.cs" />
    <Compile Include="Hints\MethodEqualsInsteadOfOperatorEqualsHint.cs" />
    <Compile Include="Hints\MultiHint.cs" />
    <Compile Include="Hints\OperatorEqualsHintBase.cs" />
    <Compile Include="Hints\SequenceEqualHint.cs" />
    <Compile Include="Hints\StringEqualsHint.cs" />
    <Compile Include="Hints\StringOperatorEqualsHint.cs" />
    <Compile Include="Infrastructure\ExpressionParser.cs" />
    <Compile Include="Infrastructure\Nodes\InvocationNode.cs" />
    <Compile Include="Infrastructure\NodeFormatter.cs" />
    <Compile Include="Infrastructure\Nodes\ArrayIndexNode.cs" />
    <Compile Include="Infrastructure\Nodes\BinaryNode.cs" />
    <Compile Include="Infrastructure\Nodes\ConditionalNode.cs" />
    <Compile Include="Infrastructure\Nodes\ConstantNode.cs" />
    <Compile Include="Infrastructure\Nodes\MemberAccessNode.cs" />
    <Compile Include="Infrastructure\Nodes\MethodCallNode.cs" />
    <Compile Include="Infrastructure\Nodes\NewArrayNode.cs" />
    <Compile Include="Infrastructure\Nodes\NewObjectNode.cs" />
    <Compile Include="Infrastructure\Nodes\Node.cs" />
    <Compile Include="Infrastructure\Nodes\UnaryNode.cs" />
    <Compile Include="Infrastructure\ObjectFormatter.cs" />
    <Compile Include="Infrastructure\ReplacementVisitor.cs" />
    <Compile Include="Infrastructure\Util.Generated.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Util.tt</DependentUpon>
    </Compile>
    <Compile Include="CallerLocation.cs" />
    <Compile Include="MultipleAssertions\Error.cs" />
    <Compile Include="MultipleAssertions\PolyAssert.cs" />
    <Compile Include="MultipleAssertions\PolyAssertException.cs" />
    <Compile Include="PAssert.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Infrastructure\Util.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Util.Generated.cs</LastGenOutput>
    </None>
    <None Include="powerassert.nuspec" />
  </ItemGroup>
  <ItemGroup>
    <Service Include="{508349B6-6B84-4DF5-91F0-309BEEBAD82D}" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>